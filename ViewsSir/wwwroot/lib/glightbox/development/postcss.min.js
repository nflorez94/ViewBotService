/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/glightbox@3.2.0/development/postcss.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
const postcss=require("postcss"),cssnext=require("postcss-preset-env"),cssnested=require("postcss-nested"),cssmqpacker=require("css-mqpacker"),cssprettify=require("postcss-prettify"),cssclean=require("clean-css"),path=require("path"),fs=require("fs");function postcssCompiler(s){const{file:e,dest:t,minify:r=!0}=s,c=path.basename(e),i=path.join(__dirname,"../",e),n=path.join(__dirname,"../",t,c),p=path.extname(c),a=path.join(__dirname,"../",t,c.replace(p,`.min${p}`)),o=fs.readFileSync(i,"utf8");return new Promise(((s,e)=>postcss([cssnested(),cssnext({stage:0,browsers:["last 2 version"],features:{calc:!1}}),cssmqpacker({sort:!0}),cssprettify()]).process(o,{from:i,to:n}).then((t=>{if(t&&t.css){if(fs.writeFile(n,t.css,"utf8",(s=>e(s))),r){const s=new cssclean({}).minify(t.css);fs.writeFile(a,s.styles,"utf8",(s=>e(s))),t.map&&fs.writeFile(n+".map",t.map,"utf8",(s=>e(s)))}s(n)}else e(t)})).catch((s=>{console.log(s),e(s)}))))}module.exports=postcssCompiler;
//# sourceMappingURL=/sm/69a519578790f28cff3e5cd7134578d47f7a7248646758d6bd1c02a08272b43b.map